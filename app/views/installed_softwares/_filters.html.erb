<thead class="table-light">
<tr>
  <th>
    <%= f.search_field :name_cont,
                       placeholder: "Поиск",
                       class: "form-control form-control-sm auto-search",
                       maxlength: 255 %>
  </th>

  <th>
    <%= f.search_field :version_cont,
                       placeholder: "Поиск",
                       class: "form-control form-control-sm auto-search",
                       maxlength: 255 %>
  </th>

  <th>
    <%= f.number_field :quantity_eq,
                       class: "form-control form-control-sm auto-search",
                       inputmode: "numeric",
                       min: 0,
                       step: 1,
                       max: 999%>
  </th>

  <!-- Фильтр по периоду действия -->
  <th>
    <div class="dropdown w-100" data-bs-auto-close="outside">
      <button class="form-control form-control-sm dropdown-toggle text-start"
              type="button"
              data-bs-toggle="dropdown"
              aria-expanded="false">
        <%= (params.dig(:q, :start_date_gteq).presence || params.dig(:q, :finish_date_lteq).presence || params.dig(:q, :finish_date_filter).presence) ? 'Фильтр по дате' : 'Фильтр по дате' %>
      </button>

      <div class="dropdown-menu p-3 shadow w-100" style="min-width: 300px;">
        <div class="mb-2">
          <label class="form-label small">Период действия</label>
          <div class="input-group input-group-sm mb-2">
            <span class="input-group-text">от</span>
            <%= f.search_field :start_date_gteq, class: "form-control form-control-sm auto-search", type: "date" %>
            <span class="input-group-text">до</span>
            <%= f.search_field :finish_date_lteq, class: "form-control form-control-sm auto-search", type: "date" %>
          </div>
        </div>

        <div class="mb-2">
          <label class="form-label small">Быстрые фильтры</label>
          <% date_filters = {
            '' => 'Все',
            'today' => 'Сегодня',
            'this_month' => 'В этом месяце',
            'this_year' => 'В этом году',
            'permanent' => 'Бессрочные',
            'expired' => 'Просроченные'
          } %>

          <% date_filters.each do |value, label| %>
            <% input_id = "filter_#{value.presence || 'all'}" %>
            <div class="form-check">
              <%= f.radio_button :finish_date, value, id: input_id, class: "form-check-input auto-submit" %>
              <%= label_tag input_id, label, class: "form-check-label" %>
            </div>
          <% end %>

        </div>
      </div>
    </div>
  </th>

  <th>
    <%= f.search_field :keyholder_cont,
                       placeholder: "Поиск",
                       class: "form-control form-control-sm auto-search",
                       maxlength: 255 %>
  </th>

  <!-- Фильтр по аудиториям -->
  <th class="start">
    <div class="dropdown w-100" data-bs-auto-close="outside">
      <button class="form-control form-control-sm dropdown-toggle text-start"
              type="button"
              data-bs-toggle="dropdown"
              aria-expanded="false">
        <%= if params.dig(:q, :comp_classes_aud_number_in).present?
              "✓ Применён"
            else
              "Фильтр по аудиториям"
            end %>
      </button>
      <div class="dropdown-menu p-3 shadow w-100" style="max-height: 40vh; overflow-y: auto;" id="aud-dropdown">
        <input type="text" class="form-control form-control-sm mb-2 auto-search" placeholder="Поиск..." id="aud-filter-search">
        <div class="form-check">
          <input class="form-check-input aud-checkbox"
                 type="checkbox"
                 name="q[without_classes]"
                 value="true"
                 id="aud_none"
                 <%= params.dig(:q, :comp_classes_id_null) == "true" ? 'checked' : '' %>>
          <label class="form-check-label" for="aud_none">Не установлено</label>
        </div>

        <% CompClass.order(:aud_number).distinct.pluck(:aud_number).each do |aud| %>
          <div class="form-check">
            <input class="form-check-input aud-checkbox"
                   type="checkbox"
                   name="q[comp_classes_aud_number_in][]"
                   value="<%= aud %>"
                   id="aud_<%= aud %>"
                   <%= Array(params.dig(:q, :comp_classes_aud_number_in)).include?(aud) ? 'checked' : '' %>>
            <label class="form-check-label" for="aud_<%= aud %>"><%= aud %></label>
          </div>
        <% end %>
      </div>
    </div>
  </th>

  <th>
    <%= f.number_field :pc_count_sum_eq, class: "form-control form-control-sm auto-search", inputmode: "numeric", min: 0, step: 1, max: 999, placeholder: "∑" %>
  </th>

  <th class="text-end">
    <div class="d-flex gap-2 align-content-end justify-content-end">
      <%= button_tag 'Очистить', type: 'button', class: 'btn btn-secondary btn-sm', id: 'reset-filters' %>
    </div>
  </th>
</tr>
</thead>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".auto-search").forEach((input) => {
            input.addEventListener("input", function () {
                clearTimeout(this.dataset.timer);
                this.dataset.timer = setTimeout(() => {
                    document.getElementById("search-form").requestSubmit();
                }, 300);
            });
        });

        document.querySelectorAll('.auto-submit').forEach(el => {
            el.addEventListener('change', () => {
                const form = document.getElementById('search-form');
                if (form) Rails.fire(form, 'submit');
            });
        });

        const audSearch = document.getElementById("aud-filter-search");
        if (audSearch) {
            audSearch.addEventListener("input", function () {
                const term = this.value.toLowerCase();
                document.querySelectorAll('#aud-dropdown .form-check').forEach(item => {
                    const text = item.textContent.toLowerCase();
                    item.style.display = text.includes(term) ? 'block' : 'none';
                });
            });
        }

        document.querySelectorAll(".aud-checkbox").forEach(checkbox => {
            checkbox.addEventListener("change", () => {
                document.getElementById("search-form").requestSubmit();
            });
        });

        document.getElementById("reset-filters")?.addEventListener("click", function () {
            const form = document.getElementById("search-form");
            if (!form) return;

            // Очистка текстовых и поисковых полей
            form.querySelectorAll("input[type='text'], input[type='date'], input[type='search'], input[type='number']").forEach(input => {
                input.value = "";
            });

            // Очистка чекбоксов и радиокнопок
            form.querySelectorAll("input[type='checkbox'], input[type='radio']").forEach(input => {
                input.checked = false;
            });

            // Явно выбрать "Все" для finish_date
            const finishRadio = form.querySelector("input[name='q[finish_date]'][value='']");
            if (finishRadio) finishRadio.checked = true;

            const sortInput = form.querySelector("input[name='q[s]']");
            if (sortInput) sortInput.value = "";

            form.requestSubmit();
        });

        // Обновление иконок сортировки
        function updateSortIcons() {
            const sortValue = document.getElementById("sort-order")?.value;
            document.querySelectorAll("i[data-sort-field]").forEach(icon => {
                const field = icon.dataset.sortField;
                icon.classList.remove("bi-caret-up-fill", "bi-caret-down-fill");

                if (sortValue === `${field} asc`) {
                    icon.classList.add("bi-caret-up-fill");
                } else if (sortValue === `${field} desc`) {
                    icon.classList.add("bi-caret-down-fill");
                }
            });
        }

        updateSortIcons();

        document.querySelectorAll("a[data-sort]").forEach(link => {
            link.addEventListener("click", function (e) {
                e.preventDefault();
                const sortField = this.dataset.sort;
                const sortInput = document.getElementById("sort-order");
                let current = sortInput.value;

                const asc = `${sortField} asc`;
                const desc = `${sortField} desc`;

                if (current === asc) {
                    sortInput.value = desc;
                } else if (current === desc) {
                    sortInput.value = "";
                } else {
                    sortInput.value = asc;
                }

                updateSortIcons();
                document.getElementById("search-form").requestSubmit();
            });
        });

        // Не закрывать dropdown при клике по содержимому
        document.querySelectorAll('.dropdown-menu').forEach(menu => {
            menu.addEventListener('click', (e) => {
                e.stopPropagation();
            });
        });

        // Закрытие dropdown при покидании мыши
        document.querySelectorAll('.dropdown').forEach(dropdownEl => {
            dropdownEl.addEventListener('mouseleave', () => {
                const toggleBtn = dropdownEl.querySelector('button.dropdown-toggle');
                if (!toggleBtn) return;
                const dropdownInstance = bootstrap.Dropdown.getInstance(toggleBtn);
                if (dropdownInstance) dropdownInstance.hide();
            });
        });
    });
</script>