<%= form_with(model: installed_software, local: true) do |form| %>
  <div class="card shadow">
    <div class="card-body p-4">
      <div class="row gx-4 gy-4">
        <!-- Основная информация -->
        <div class="col-md-8">
          <h5 class="mb-3">Основная информация</h5>
          <div class="row gx-2 gy-3 align-items-end">
            <div class="col-md-9">
              <%= form.label :name, 'Название ПО', class: 'form-label' %>
              <%= form.text_field :name, class: 'form-control', required: true, placeholder: 'Напр. AutoCAD' %>
            </div>
            <div class="col-md-3">
              <%= form.label :note, 'Отметка', class: 'form-label small' %>
              <%= form.text_field :note, class: 'form-control', maxlength: 8, placeholder: '8 симв.' %>
            </div>
            <div class="row align-items-center g-3">
              <div class="col-md-4">
                <%= form.label :version, 'Версия', class: 'form-label' %>
                <%= form.text_field :version, class: 'form-control', required: true, placeholder: 'Напр. 2021' %>
              </div>
              <div class="col-md-4">
                <%= form.label :quantity, 'Количество лицензий', class: 'form-label' %>
                <%= form.number_field :quantity, class: 'form-control', min: 1, placeholder: 'Напр. 25' %>
              </div>
              <div class="col-md-4 d-flex align-items-center">
                <div class="form-check form-switch">
                  <%= form.label :is_server, 'Серверное ПО', class: 'form-check-label', for: 'server-switch' %>
                  <%= form.check_box :is_server, class: 'form-check-input', id: 'server-switch' %>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Срок лицензии -->
        <div class="col-md-4">
          <h5 class="mb-3">Срок лицензии</h5>
          <div class="row gx-2 gy-3">
            <div class="col-md-12">
              <%= form.label :start_date, 'Начало', class: 'form-label' %>
              <%= form.date_field :start_date, class: 'form-control' %>
            </div>

            <div class="form-check form-switch mb-2">
              <%= check_box_tag :is_perpetual, '1', @installed_software.finish_date.nil?, id: "is_perpetual_checkbox", class: "form-check-input" %>
              <%= label_tag :is_perpetual, "Бессрочная лицензия", class: "form-check-label", for: "is_perpetual_checkbox" %>
            </div>

            <div class="col-md-12">
              <%= form.label :finish_date, 'Окончание', class: 'form-label' %>
              <%= form.date_field :finish_date, class: 'form-control', id: 'finish_date_field' %>
            </div>
          </div>
        </div>
      </div>

      <hr class="my-4">
      <h5 class="mb-3">Дополнительно</h5>
      <div class="row gx-4 gy-3 mb-4">
        <!-- Держатель ключа и Назначение -->
        <div class="col-md-6">
          <%= form.label :keyholder, 'Держатель ключа', class: 'form-label' %>
          <%= form.text_field :keyholder, class: 'form-control', placeholder: 'Иванов И.И., +7 999 123-45-67' %>
        </div>

        <div class="col-md-6">
          <%= form.label :purpose, "Назначение", class: 'form-label'  %><br>
          <% ["учебное", "обеспечивающее"].each do |value| %>
            <%= check_box_tag "installed_software[purpose][]", value, Array(@installed_software.purpose).include?(value), id: "purpose_#{value}" %>
            <%= label_tag "purpose_#{value}", value %><br>
          <% end %>
        </div>

        <!-- Основание использования -->
        <div class="col-12">
          <%= form.label :usage_basis, 'Основание использования', class: 'form-label' %>
          <%= form.text_area :usage_basis, class: 'form-control', rows: 3, placeholder: 'Лицензионный договор №...' %>
        </div>
      </div>


      <hr class="my-4">
      <!-- Блок Аудитории -->
      <div class="d-flex justify-content-between align-items-center mb-2">
        <h5 class="mb-0">Аудитории</h5>
        <small class="text-muted">Всего компьютеров: <span id="count-comp">0</span></small>
      </div>
      <%= hidden_field_tag "installed_software[comp_class_ids][]", "" %>
      <div class="row gx-4 gy-3 mb-4">
        <!-- триггер дропдауна -->
        <div class="col-md-4">
          <div id="aud-dropdown-wrapper" class="position-relative w-100">
            <button id="aud-dropdown-btn" class="form-control form-control-sm text-start" type="button">
              Выбрать аудиторию…
            </button>
            <div id="aud-dropdown-menu" class="dropdown-menu p-3 shadow w-100" style="bottom: 100%">
              <!-- поле поиска -->
              <div class="border-bottom sticky-top bg-white">
                <input id="aud-search" type="text" class="form-control form-control-sm mb-2" placeholder="Поиск…">
              </div>
              <!-- список пунктов -->
              <div id="aud-list" style="max-height: 30vh; overflow-y: auto;" class="p-3 pt-2">
                <% CompClass.order(:aud_number).distinct.each do |comp| %>
                  <div class="aud-item py-1 px-2 mb-1 rounded" data-id="<%= comp.id %>" data-text="<%= comp.aud_number %>" data-count="<%= comp.count_comp %>" style="cursor: pointer;">
                    <%= comp.aud_number %> (<%= comp.count_comp %>)
                  </div>
                <% end %>
              </div>
            </div>
          </div>
        </div>

        <!-- Контейнер для бейджей -->
        <div class="col-md-8">
          <div id="selected-auditoriums" class="d-flex flex-wrap align-items-center gap-2">
            <% @installed_software.comp_classes.each do |aud| %>
              <span class="badge bg-success d-inline-flex align-items-center" data-id="<%= aud.id %>" data-text="<%= aud.aud_number %>" data-count="<%= aud.count_comp %>">
                <%= aud.aud_number %> (<%= aud.count_comp %>)
                <button type="button" class="btn-close btn-close-white btn-sm ms-2 remove-aud" aria-label="Удалить" data-id="<%= aud.id %>"></button>
                <input type="hidden" name="installed_software[comp_class_ids][]" value="<%= aud.id %>">
              </span>
            <% end %>
          </div>
        </div>
      </div>

      <div class="d-flex justify-content-end gap-2">
        <%= link_to 'Отмена', installed_softwares_path, class: 'btn btn-secondary' %>
        <%= form.submit "Сохранить", class: 'btn btn-primary' %>
      </div>
    </div>
  </div>
<% end %>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const wrapper = document.getElementById("aud-dropdown-wrapper");
        const btn = document.getElementById("aud-dropdown-btn");
        const menu = document.getElementById("aud-dropdown-menu");
        const list = document.getElementById("aud-list");
        const searchIn = document.getElementById("aud-search");
        const container = document.getElementById("selected-auditoriums");
        const countDisplay = document.getElementById("count-comp");

        const templates = {};
        Array.from(list.children).forEach(item => {
            const id = item.dataset.id;
            templates[id] = {
                id,
                text: item.dataset.text,
                count: parseInt(item.dataset.count, 10),
                element: item
            };
        });

        // Удаляем из списка уже выбранные
        Array.from(container.children).forEach(badge => {
            const id = badge.dataset.id;
            if (templates[id]) {
                templates[id].element.remove();
                delete templates[id];
            }
        });

        function recalc() {
            let sum = 0;
            container.querySelectorAll('span[data-count]').forEach(span => {
                sum += parseInt(span.dataset.count, 10);
            });
            countDisplay.textContent = sum;
        }

        btn.addEventListener("click", e => {
            e.stopPropagation();
            menu.style.display = menu.style.display === "none" ? "block" : "none";
        });
        document.addEventListener("click", e => {
            if (!wrapper.contains(e.target)) menu.style.display = "none";
        });

        searchIn.addEventListener("input", () => {
            const term = searchIn.value.trim().toLowerCase();
            Object.values(templates).forEach(({ text, element }) => {
                element.style.display = text.toLowerCase().includes(term) ? "" : "none";
            });
        });

        list.addEventListener("click", e => {
            const item = e.target.closest(".aud-item");
            if (!item) return;
            const { id, text } = templates[item.dataset.id];
            const count = templates[id].count;

            // Удаляем из выпадашки
            item.remove();
            delete templates[id];

            // Создаем бейдж
            const span = document.createElement("span");
            span.className = "badge bg-success d-inline-flex align-items-center me-1 mb-1";
            span.dataset.id = id;
            span.dataset.text = text;
            span.dataset.count = count;
            span.innerHTML = `
        ${text} (${count})
        <button type="button" class="btn-close btn-close-white btn-sm ms-2 remove-aud" data-id="${id}" aria-label="Удалить"></button>
        <input type="hidden" name="installed_software[comp_class_ids][]" value="${id}">
      `;
            container.append(span);
            recalc();
        });

        container.addEventListener("click", e => {
            if (!e.target.classList.contains("remove-aud")) return;
            const id = e.target.dataset.id;
            const badge = e.target.closest("span");
            const text = badge.dataset.text;
            const count = badge.dataset.count;
            badge.remove();

            // Возвращаем в выпадающий список
            const item = document.createElement("div");
            item.className = "aud-item py-1 px-2 mb-1 rounded";
            item.dataset.id = id;
            item.dataset.text = text;
            item.dataset.count = count;
            item.textContent = `${text} (${count})`;
            item.style.cursor = "pointer";
            list.append(item);
            templates[id] = { id, text, count, element: item };
            recalc();
        });

        // Инициация суммы на старте
        recalc();

        const checkbox = document.getElementById("is_perpetual_checkbox");
        const dateField = document.getElementById("finish_date_field");

        function toggleDateField() {
            if (checkbox.checked) {
                dateField.disabled = true;
                dateField.value = "";
            } else {
                dateField.disabled = false;
            }
        }

        checkbox.addEventListener("change", toggleDateField);
        toggleDateField(); // запускается при загрузке страницы
    });
</script>
