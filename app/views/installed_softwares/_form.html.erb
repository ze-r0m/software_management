<%= form_with(model: installed_software, local: true) do |form| %>
  <% if installed_software.errors.any? %>
    <div class="alert alert-danger">
      <h4>Ошибки:</h4>
      <ul>
        <% installed_software.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="card shadow-sm">
    <div class="card-body p-4">

      <div class="row gx-4 gy-4">
        <!-- Основная информация -->
        <div class="col-md-8">
          <h5 class="mb-3">Основная информация</h5>
          <div class="row gx-2 gy-3 align-items-end">
            <div class="col-md-9">
              <%= form.label :name, 'Название ПО', class: 'form-label' %>
              <%= form.text_field :name, class: 'form-control', required: true, placeholder: 'Напр. AutoCAD' %>
            </div>
            <div class="col-md-3">
              <%= form.label :note, 'Отметка', class: 'form-label small' %>
              <%= form.text_field :note, class: 'form-control', maxlength: 8, placeholder: '8 симв.' %>
            </div>
            <div class="row align-items-center g-3">
              <div class="col-md-5">
                <%= form.label :version, 'Версия', class: 'form-label' %>
                <%= form.text_field :version, class: 'form-control', required: true, placeholder: 'Напр. 2021' %>
              </div>

              <div class="col-md-5 d-flex align-items-center">
                <div class="form-check form-switch">
                  <%= form.label :is_server, 'Серверное ПО',
                                 class: 'form-check-label',
                                 for: 'server-switch' %>
                  <%= form.check_box :is_server, class: 'form-check-input', id: 'server-switch' %>

                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Срок лицензии -->
        <div class="col-md-4">
          <h5 class="mb-3">Срок лицензии</h5>
          <div class="row gx-2 gy-3">
            <div class="col-md-12">
              <%= form.label :start_date, 'Начало', class: 'form-label' %>
              <%= form.date_field :start_date, class: 'form-control' %>
            </div>
            <div class="col-md-12">
              <%= form.label :finish_date, 'Окончание', class: 'form-label' %>
              <%= form.date_field :finish_date, class: 'form-control' %>
            </div>
          </div>
        </div>
      </div>

      <hr class="my-4">

      <!-- Дополнительная информация-->

      <div class="row gx-4 gy-3 mb-4">
        <h5 class="mb-3 col-md-3">Дополнительно</h5>
        <div class="col-md-9">
          <%= form.label :keyholder, 'Держатель ключа', class: 'form-label' %>
          <%= form.text_field :keyholder, class: 'form-control', placeholder: 'Иванов И.И., +7 999 123‑45‑67' %>
        </div>
      </div>

      <hr class="my-4">

      <!-- Блок Аудитории -->
      <h5 class="mb-3">Аудитории</h5>
      <%= hidden_field_tag "installed_software[comp_class_ids][]", "" %>
      <div class="row gx-4 gy-3 mb-4">
        <!-- триггер дропдауна -->
        <div class="col-md-6">
          <div id="aud-dropdown-wrapper" class="position-relative w-100">
            <button id="aud-dropdown-btn"
                    class="form-control form-control-sm text-start"
                    type="button">
              Выбрать аудиторию…
            </button>
            <div id="aud-dropdown-menu"
                 class="dropdown-menu p-3 shadow w-100"
                 style="max-height: 40vh; overflow-y: auto; display: none;">
              <!-- поле поиска -->
              <input id="aud-search"
                     type="text"
                     class="form-control form-control-sm mb-2"
                     placeholder="Поиск…">
              <!-- список пунктов -->
              <div id="aud-list">
                <% CompClass.order(:aud_number).distinct.pluck(:aud_number).each do |aud| %>
                  <div class="aud-item py-1 px-2 mb-1 rounded"
                       data-id="<%= aud %>"
                       style="cursor: pointer;">
                    <%= aud %>
                  </div>
                <% end %>
              </div>
            </div>
          </div>
        </div>

        <!-- Контейнер для бейджей -->
        <div class="col-md-6">
          <div id="selected-auditoriums" class="d-flex flex-wrap gap-2">
            <% @installed_software.comp_classes.each do |aud| %>
        <span class="badge bg-success d-inline-flex align-items-center"
              data-id="<%= aud.aud_number %>">
          <%= aud.aud_number %>
          <button type="button"
                  class="btn-close btn-close-white btn-sm ms-2 remove-aud"
                  aria-label="Удалить"
                  data-id="<%= aud.aud_number %>"></button>
          <input type="hidden"
                 name="installed_software[comp_class_ids][]"
                 value="<%= aud.id %>">
        </span>
            <% end %>
          </div>
        </div>
      </div>

      <div class="d-flex justify-content-end gap-2">
        <%= link_to 'Отмена', installed_softwares_path, class: 'btn btn-secondary' %>
        <%= form.submit "Сохранить", class: 'btn btn-primary' %>
      </div>

    </div>
  </div>
<% end %>

<!--todo: не передаются id аудиторий для добавления-->
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const wrapper   = document.getElementById("aud-dropdown-wrapper");
        const btn       = document.getElementById("aud-dropdown-btn");
        const menu      = document.getElementById("aud-dropdown-menu");
        const list      = document.getElementById("aud-list");
        const searchIn  = document.getElementById("aud-search");
        const container = document.getElementById("selected-auditoriums");

        const templates = {};
        Array.from(list.children).forEach(item => {
            const id   = item.dataset.id;
            const text = item.dataset.text || item.textContent.trim();
            templates[id] = {
                id: id,
                text: text,
                element: item
            };
        });

        // удаляем из выпадающего списка уже выбранные (отображённые)
        Array.from(container.children).forEach(badge => {
            const id = badge.dataset.id;
            if (templates[id]) {
                templates[id].element.remove();
                delete templates[id];
            }
        });

        // открытие/закрытие
        btn.addEventListener("click", e => {
            e.stopPropagation();
            menu.style.display = menu.style.display === "none" ? "block" : "none";
        });
        document.addEventListener("click", e => {
            if (!wrapper.contains(e.target)) menu.style.display = "none";
        });

        // фильтрация
        searchIn.addEventListener("input", () => {
            const term = searchIn.value.trim().toLowerCase();
            Object.values(templates).forEach(({ text, element }) => {
                element.style.display = text.toLowerCase().includes(term) ? "" : "none";
            });
        });

        // добавление бейджа
        list.addEventListener("click", e => {
            const item = e.target.closest(".aud-item");
            if (!item) return;
            const audId  = item.dataset.id;
            const audTxt = item.dataset.text || item.textContent.trim();

            item.remove();
            delete templates[audId];

            const span = document.createElement("span");
            span.className = "badge bg-success d-inline-flex align-items-center me-1 mb-1";
            span.dataset.id = audId;
            span.dataset.text = audTxt;
            span.innerHTML = `
            ${audTxt}
            <button type="button"
                    class="btn-close btn-close-white btn-sm ms-2 remove-aud"
                    aria-label="Удалить"
                    data-id="${audId}"></button>
            <input type="hidden"
                   name="installed_software[comp_class_ids][]"
                   value="${audId}">
        `;
            container.append(span);
        });

        // удаление бейджа
        container.addEventListener("click", e => {
            if (!e.target.classList.contains("remove-aud")) return;
            const audId  = e.target.dataset.id;
            const badge  = e.target.closest("span");
            const audTxt = badge.dataset.text;
            badge.remove();

            const item = document.createElement("div");
            item.className = "aud-item py-1 px-2 mb-1 rounded";
            item.dataset.id = audId;
            item.dataset.text = audTxt;
            item.textContent = audTxt;
            item.style.cursor = "pointer";
            list.append(item);
            templates[audId] = {
                id: audId,
                text: audTxt,
                element: item
            };
        });
    });
</script>
